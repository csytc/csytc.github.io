依赖node来获取路径需要初始化 npm init生成package.json
然后将入口文件和出口文件进行配置



css-loader只负责将css文件进行加载，不负责解析
style-loader负责将样式添加到DOM中
使用多个loader时，是从右向左加载


options: {
当加载的图片，小于limit时，会将图片编译成base64字符串形式
当加载的图片，大于limit时，需要使用file-loader模块进行加载
  limit: 52000,
图片处理的时候，webpack会在dist的文件中自动帮我们生成一个非常长的名字：这是一个32为的hash值
目的是防止名字重复。但在真实开发中，可能对打包图片名字有一定的要求：比如将所有图片放在一个文件夹中，
跟上图片原来的名字，同时也要防止重复。所以，我们可以在option中添加上如下选项：
    img：文件要打包到的文件夹、
    name：获取图片原来的名字，放在该位置、
    hash:8为了防止图片名称重复，依然使用hash，但是我们只保留8位、
    ext：使用图片原来的扩展名



Es6语法处理，如果打包的js文件中含有ES6语法，发现ES6语法并没有转成ES5，那么就意味着可能一些对ES6还不支持的浏览器没有办法很好的
运行我们的代码。所以，如果希望将ES6语法转成ES5，那么就需要使用babel
所以在webpack中，我们直接使用babel对应的loader就可以了，然后再配置webpack.config.js文件